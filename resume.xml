<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc authorship="yes" ?>
<?rfc compact="yes" ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<!-- <?rfc iprnotified="no" ?> -->
<?rfc strict="yes" ?>

<rfc docName="" category="info">

  <!-- FRONT -->
  <front>
    <title abbrev="Curriculum Vitae // Resume">Curriculum Vitae // Resume of Aaron Levin</title>
    <author initials="A" surname="Levin" fullname="Aaron Michael Benjamin Levin">
      <!-- <organization>Aaron Levin</organization> -->
      <address>
        <postal>
          <street>#4 - 2 King Street South</street>
          <city>Waterloo</city>
          <region>ON</region>
          <code>N2J 1N8</code>
          <country>Canada</country>
        </postal>
        <phone>+1 416-727-2977</phone>
        <email>vilevin@gmail.com</email>
        <uri>http://aaronlevin.ca</uri>
      </address>
    </author>
    <date month="March" year="2015" day="28" />
    <!-- meta data -->
    <area>Self Improvement</area>
    <workgroup>Aaron Levin Working Group</workgroup>
    <keyword>aaron levin</keyword>
    <keyword>resume</keyword>
    <keyword>programming</keyword>
    <keyword>functional programming</keyword>
    <abstract>
      <t>This document summarizes the personal and working history of Aaron Michael Benjamin Levin, MSc., born 1981-12-03T12:53:00-07:00 in Calgary, Alberta (geo:51.065389,-114.133306).
      </t>

   </abstract>

  </front>
  <!-- /FRONT -->

  <!-- MIDDLE -->
  <middle>

    <!-- SECTION: INTRODUCTION -->
    <section title="Introduction" anchor="intro">
      <t>
        This is the introduction, where I outline my objectives.
      </t>
      <t>The engine behind my enthusiasm resides at the intersection of my analytical background (MSc. Mathematics) and my creative energies (writing, design, and development). Digital media presents a unique opportunity to combine deep, analytics processes with, highly-creative, user-oriented goals.
      </t>
    </section>
    <!-- /SECTION: INTRODUCTION -->

    <!-- SECTION: EDUCATION -->
    <section title="Education" anchor="education">

      <section title="MSc. Mathematics (University of Alberta)">
        <t>
          <list style="symbols">
            <t>Thesis work in Positivity on Banach Lattices</t>
            <t>2006 - 2007</t>
            <t>Supervisors: <eref target="http://www.math.ualberta.ca/~vtroitsky/">Vladimir Troitsky</eref> and <eref target="http://www.math.ualberta.ca/Tomczak-Jaegermann_N.html">Nicole Tomczak-Jaegermann</eref></t>
            <t>GPA: 3.8</t>
          </list>
        </t>

        <t>I accomplished original work in extending the Perron-Frobenius theorem on matrices to semigroups of positive operators on infinite-dimensional Banach lattices.
        </t>
        <t>The Perron-Frobenius theorem is used extensively in machine learning, specifically in Google's PageRank algorithm. My work empowered researches and scientists to use Perron-Frobenius in a broader class of Banach spaces.  
        </t>
      </section>
      <section title="BSc. Engineering Physics (University of Alberta)">
        <t>
          <list style="symbols">
            <t>Specialized in Computational Physics</t>
            <t>Honours thesis: analysing time-resolved optical properties of continuum-generated probe pulses.</t>
            <t>1999 - 2004</t>
            <t>Thesis supervisor: <eref target="https://uofa.ualberta.ca/physics/people/people-collection/frank-hegmann">Frank Hegmann</eref></t>
            <t>GPA: 3.8</t>
          </list>
        </t>
        <t>
          During my undergraduate degree I focused on obtaining a strong foundation in programming (C, C++, MC6800 Assembly) to compliment my studies in theoretical physics.
        </t>
      </section>
    </section>
    <!-- /SECTION: EDUCATION -->

    <!-- /SECTION: ONLINE IDENTITIES -->
    <section title="Relevant Online Identities" anchor="online-identities">
      <t>
        <list style="symbols">
          <t>Personal website: <eref target="http://aaronlevin.ca">http://aaronlevin.ca</eref></t>
          <t>GitHub: <eref target="https://github.com/aaronlevin">https://github.com/aaronlevin</eref></t>
          <t>Twitter: @aaronmblevin (<eref target="https://twitter.com/aaronmblevin">https://twitter.com/aaronmblevin</eref>)</t>
          <t>Keybase: <eref target="https://keybase.io/aaronlevin">https://keybase.io/aaronlevin</eref></t>
          <t>Stack Overflow: <eref target="http://stackoverflow.com/users/1308975/aaronlevin">http://stackoverflow.com/users/1308975/aaronlevin</eref></t>
          <t>Haskellers: <eref target="http://www.haskellers.com/user/aaronlevin">http://www.haskellers.com/user/aaronlevin</eref></t>
          <t>Facebook: <eref target="https://www.facebook.com/aaronmblevin">https://www.facebook.com/aaronmblevin</eref></t>
          <t>Google Plus: <eref target="https://plus.google.com/110471816183726748520">https://plus.google.com/110471816183726748520</eref></t>
        </list>
      </t>
    </section>
    <!-- /SECTION: ONLINE IDENTITIES -->

    <!-- SECTION: RELEVANT TECH -->
    <section title="Relevant Technological Experience" anchor="tech-experience">

      <section title="Programming Languages" anchor="programming-languages">

        <section title="Quantifying Programming Language Knowledge">

          <t>
            Below is a list of Programming Languages I have used in production.
          </t>
          <t>Communicating expertise in a programming language is nuanced. The usual metric (number of years of experience) is flawed; it does not accurately capture foundational understanding in a language. Someone with three years of experience in a language as a compiler designer is going to have a much deeper and foundational understanding than someone who has used said language in their career. 
          </t>
          <t>To overcome this limitation, I've created a number of levels and a curve to represent an individual's understanding at each level. The scale is fibonacci, which I chose arbitrarily.
          </t>
          <t>
            <figure alt='[Fibonacci Scale]'>
              <preamble>PL Understanding as a Fibonacci Sequence</preamble>
              <artwork>

                understanding
                 ^
               13|                    .
               12|                   `
               11|                   |
               10|                   |
                9|                  /
                8|                 ;
                7|                 |
                6|                /
                5|              _/
                4|             /
                3|          ._/
                2|      .__/
                1|_____/
                /---------------------> level
                0  1  2  3  4  5  6  7
              </artwork>
              <postamble>As one increases level, understanding increases dramatically.</postamble>
            </figure>
          </t>
        <t>
          <list style="hanging">
            <t hangText="Level 1:">Have read about this language and potentially written a Hello World program.</t>
            <t hangText="Level 2:">Have written trivial programs and am familiar with the language's paradigms.</t>
            <t hangText="Level 3:">Can write a trivial program and am familiar with the build tools. Alternatively, this level may include languages I may have been proficient in many years ago, but time has waned my expertise.</t>
            <t hangText="Level 4:">Can write non-trivial programs and reason about performance. Am aware of some of the major libraries and frameworks, though not an expert in their design.</t>
            <t hangText="Level 5:">Can write and maintain large projects in this language. Have obtained deeper understanding of runtime and compiler nuances.</t>
            <t hangText="Level 6:">Have written and maintained very large projects in this language, using a multitude of tools to reason and improve performance.</t>
            <t hangText="Level 7:">You are <eref target="https://github.com/ekmett">Edward Kmett</eref>.</t>
          </list>
        </t>
      
      </section>
      <section title="Programming Language Knowledge">
      <t>
        <list style="symbols">
          <t>Haskell: 5</t>
            <t>Scala: 5</t>
            <t>Bash: 5</t>
            <t>Python: 4</t>
            <t>Java: 4</t>
            <t>Clojure: 3</t>
            <t>Ruby: 3</t>
            <t>JavaScript: 3</t>
            <t>JavaScript: 3</t>
            <t>C++: 3</t>
            <t>C: 3</t>
            <t>R: 2</t>
            <t>MC68800 Assembly: 2</t>
            <t>Idris: 2</t>
            <t>Intuitionistic Logic: 2</t>
            <t>Agda: 1</t>
          </list>
        </t>
      </section>
    </section>
      <section title="Paradigms and Protocols">
        <section title="Paradigms">
          <t>
            <list style="symbols">
              <t>Pure, Functional Programming</t>
              <t>Object Oriented Programming (OOP</t>
              <t>Continuation-Passing Style (CPS)</t>
              <t>REST</t>
              <t>Symmetric and Asymmetric Encryption</t>
              <t>(E)DSLs</t>
            </list>
          </t>
        </section>
        <section title="Protocols">
          <t>
            <list style="symbols">
              <t>HTTP/1.1</t>
              <t>TCP/IP</t>
              <t>UDP</t>
              <t>OAuth 2.0</t>
              <t>JWT</t>
              <t>AES Encryption (Counter mode with CBC-MAC (CCM))</t>
              <t>ECC Encryption</t>
            </list>
          </t>
          <t>Protocols I have used but don't feel confident saying I understand them:
            <list style="symbols">
              <t>Bluetooth Smart (Bluetooth Low Energy)</t>
              <t>GATT</t>
              <t>Memcached</t>
            </list>
          </t>
        </section>


      </section>
    </section>
    <!-- /SECTION: RELEVANT TECH -->

  </middle>
  <!-- /MIDDLE -->

</rfc>
